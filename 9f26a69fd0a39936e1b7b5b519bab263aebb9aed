{
  "comments": [
    {
      "key": {
        "uuid": "f1fc4ac4_a98f42d7",
        "filename": "healthMonitor.cpp",
        "patchSetId": 10
      },
      "lineNbr": 271,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-06-15T18:00:39Z",
      "side": 1,
      "message": "Why are you forcing a conversion to string_view here?  Isn\u0027t \u0027auto\u0026\u0027 sufficient?",
      "range": {
        "startLine": 271,
        "startChar": 9,
        "endLine": 271,
        "endChar": 31
      },
      "revId": "9f26a69fd0a39936e1b7b5b519bab263aebb9aed",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "18180edc_3ccfd288",
        "filename": "healthMonitor.cpp",
        "patchSetId": 10
      },
      "lineNbr": 273,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-06-15T18:00:39Z",
      "side": 1,
      "message": "I\u0027m not sure if this is really doing an emplace since none of the elements here are std::move\u0027d, so you should probably use \u0027push_back\u0027 to avoid confusion that you\u0027re actually doing something that performs better than push_back does.",
      "range": {
        "startLine": 273,
        "startChar": 26,
        "endLine": 273,
        "endChar": 38
      },
      "revId": "9f26a69fd0a39936e1b7b5b519bab263aebb9aed",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "64085ee8_e8e0e15c",
        "filename": "healthMonitor.hpp",
        "patchSetId": 10
      },
      "lineNbr": 136,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-06-15T18:00:39Z",
      "side": 1,
      "message": "Can you forward declare this at the top (and ensure initialization with {})?  It was hard to see with no whitespace to separate it.  The definition seems separate from the rest of the sequence from 124-137.",
      "range": {
        "startLine": 136,
        "startChar": 0,
        "endLine": 136,
        "endChar": 40
      },
      "revId": "9f26a69fd0a39936e1b7b5b519bab263aebb9aed",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dce99ab5_64b3c07e",
        "filename": "healthMonitor.hpp",
        "patchSetId": 10
      },
      "lineNbr": 137,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-06-15T18:00:39Z",
      "side": 1,
      "message": "Please use C++ \u003d\u003d operator on a string for clarity.",
      "revId": "9f26a69fd0a39936e1b7b5b519bab263aebb9aed",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "32b85839_55b0b497",
        "filename": "healthMonitor.hpp",
        "patchSetId": 10
      },
      "lineNbr": 143,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-06-15T18:00:39Z",
      "side": 1,
      "message": "Any reason to not use container foreach?",
      "revId": "9f26a69fd0a39936e1b7b5b519bab263aebb9aed",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b621f43f_55b9fdc4",
        "filename": "healthMonitor.hpp",
        "patchSetId": 10
      },
      "lineNbr": 146,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-06-15T18:00:39Z",
      "side": 1,
      "message": "This cast doesn\u0027t seem necessary since the operator+ will return a string anyhow, right?",
      "range": {
        "startLine": 146,
        "startChar": 20,
        "endLine": 146,
        "endChar": 31
      },
      "revId": "9f26a69fd0a39936e1b7b5b519bab263aebb9aed",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5cdc0c7d_5fc98ad9",
        "filename": "healthMonitor.hpp",
        "patchSetId": 10
      },
      "lineNbr": 147,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-06-15T18:00:39Z",
      "side": 1,
      "message": "Needed?  If it is, it seems like an obvious thing for us to get fixed in phosphor-logging.",
      "range": {
        "startLine": 147,
        "startChar": 24,
        "endLine": 147,
        "endChar": 30
      },
      "revId": "9f26a69fd0a39936e1b7b5b519bab263aebb9aed",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}