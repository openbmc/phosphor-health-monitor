{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "a3cf1b97_3807e536",
        "filename": "/COMMIT_MSG",
        "patchSetId": 16
      },
      "lineNbr": 31,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-01-30T00:09:52Z",
      "side": 1,
      "message": "Use triple back-ticks escapes on these.\n\nWhat is the command you ran to get this?  That\u0027s probably helpful.",
      "range": {
        "startLine": 18,
        "startChar": 0,
        "endLine": 31,
        "endChar": 0
      },
      "revId": "770b1f1db2b600ff4ad4b2c36d4e3671ef3cc642",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0cc16c54_c142efeb",
        "filename": "healthMonitor.cpp",
        "patchSetId": 16
      },
      "lineNbr": 764,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-01-30T00:09:52Z",
      "side": 1,
      "message": "I\u0027m slightly stumped as to what is going on here.  Else where we\u0027ve sort of created a big sd-event/ASIO loop, but then here we\u0027re calling `run` which runs the sdbusplus::async context (until completion).  Effectively the code below this point never runs.\n\nWe did request a bus name above on 753 though...",
      "range": {
        "startLine": 761,
        "startChar": 0,
        "endLine": 764,
        "endChar": 25
      },
      "revId": "770b1f1db2b600ff4ad4b2c36d4e3671ef3cc642",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0eb642cd_a77eec24",
        "filename": "health_monitor.cpp",
        "patchSetId": 16
      },
      "lineNbr": 18,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-01-30T00:09:52Z",
      "side": 1,
      "message": "This would be a good opportunity to use the async client code instead of having written the findPaths code yourself.\n\nhttps://github.com/facebook/openbmc/blob/helium/common/recipes-lfopenbmc/mfg-tool/files/utils/mapper.hpp#L40",
      "revId": "770b1f1db2b600ff4ad4b2c36d4e3671ef3cc642",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fc2c27c9_9f6e0697",
        "filename": "health_monitor.cpp",
        "patchSetId": 16
      },
      "lineNbr": 22,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-01-30T00:09:52Z",
      "side": 1,
      "message": "TYPE.",
      "range": {
        "startLine": 22,
        "startChar": 53,
        "endLine": 22,
        "endChar": 58
      },
      "revId": "770b1f1db2b600ff4ad4b2c36d4e3671ef3cc642",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5262364d_99ebdcbd",
        "filename": "health_monitor.cpp",
        "patchSetId": 16
      },
      "lineNbr": 23,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-01-30T00:09:52Z",
      "side": 1,
      "message": "I\u0027ve lost track if this is your enum or the sdbusplus enum.  Use convert_to_string if necessary.",
      "range": {
        "startLine": 23,
        "startChar": 18,
        "endLine": 23,
        "endChar": 31
      },
      "revId": "770b1f1db2b600ff4ad4b2c36d4e3671ef3cc642",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4d2bc1b6_0217a0d0",
        "filename": "health_monitor.cpp",
        "patchSetId": 16
      },
      "lineNbr": 35,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-01-30T00:09:52Z",
      "side": 1,
      "message": "TYPE",
      "range": {
        "startLine": 35,
        "startChar": 52,
        "endLine": 35,
        "endChar": 57
      },
      "revId": "770b1f1db2b600ff4ad4b2c36d4e3671ef3cc642",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f9b83fcc_51f28d05",
        "filename": "health_monitor.cpp",
        "patchSetId": 16
      },
      "lineNbr": 49,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-01-30T00:09:52Z",
      "side": 1,
      "message": "I don\u0027t think this is the service name you used in the bmcweb commit, is it?",
      "range": {
        "startLine": 49,
        "startChar": 29,
        "endLine": 49,
        "endChar": 47
      },
      "revId": "770b1f1db2b600ff4ad4b2c36d4e3671ef3cc642",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "47c02550_a90cf6dc",
        "filename": "health_monitor.cpp",
        "patchSetId": 16
      },
      "lineNbr": 60,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-01-30T00:09:52Z",
      "side": 1,
      "message": "How about std::chrono::seconds(5) ?",
      "range": {
        "startLine": 60,
        "startChar": 21,
        "endLine": 60,
        "endChar": 56
      },
      "revId": "770b1f1db2b600ff4ad4b2c36d4e3671ef3cc642",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c1507726_f373d6d0",
        "filename": "health_monitor.hpp",
        "patchSetId": 16
      },
      "lineNbr": 8,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-01-30T00:09:52Z",
      "side": 1,
      "message": "Did we use any of this?  Doesn\u0027t look like it.",
      "range": {
        "startLine": 5,
        "startChar": 0,
        "endLine": 8,
        "endChar": 54
      },
      "revId": "770b1f1db2b600ff4ad4b2c36d4e3671ef3cc642",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7388d3a7_1939f115",
        "filename": "health_monitor.hpp",
        "patchSetId": 16
      },
      "lineNbr": 10,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-01-30T00:09:52Z",
      "side": 1,
      "message": "Sometimes you use map and sometimes you use unordered_map.  It isn\u0027t always obvious why.",
      "revId": "770b1f1db2b600ff4ad4b2c36d4e3671ef3cc642",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "97a2b3fb_148064e9",
        "filename": "health_monitor.hpp",
        "patchSetId": 16
      },
      "lineNbr": 21,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-01-30T00:09:52Z",
      "side": 1,
      "message": "No inheritance?  Not needed, right?",
      "revId": "770b1f1db2b600ff4ad4b2c36d4e3671ef3cc642",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eefcfdfc_21ce6abe",
        "filename": "health_monitor.hpp",
        "patchSetId": 16
      },
      "lineNbr": 39,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-01-30T00:09:52Z",
      "side": 1,
      "message": "Would suggest using a `context` here and not a `bus` if you\u0027re trying to use the sdbusplus::async code overall.",
      "revId": "770b1f1db2b600ff4ad4b2c36d4e3671ef3cc642",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}