{
  "comments": [
    {
      "key": {
        "uuid": "e23ff501_9ec0f174",
        "filename": "healthMonitor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 217,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-03-12T13:09:48Z",
      "side": 1,
      "message": "We should not be setting criticalLow thresholds on utilization sensors.  0 utilization is actually a *good thing*.  I could maybe see setting it to -1, but this seems like a bug in the IPMI implementation if it cannot read sensors without low thresholds set.\n\nThere was a change not too long ago to default unset thresholds to NaN.  Maybe ipmid is not handling this properly?",
      "revId": "12eded9ea13cc8c7c95ad1a13ee6178cb1ef07d3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "73ed0872_be146ad8",
        "filename": "healthMonitor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 217,
      "author": {
        "id": 1000107
      },
      "writtenOn": "2021-03-15T05:19:50Z",
      "side": 1,
      "message": "This change is used to compatible with https://github.com/openbmc/intel-ipmi-oem/blob/master/include/sensorutils.hpp#L164. If there is a threshold, both the max and min values must be exist. I think we can set the default as 0.001 for this sensor.",
      "parentUuid": "e23ff501_9ec0f174",
      "revId": "12eded9ea13cc8c7c95ad1a13ee6178cb1ef07d3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "27466467_68fd2260",
        "filename": "healthMonitor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 217,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-03-15T12:58:03Z",
      "side": 1,
      "message": "\u003e If there is a threshold, both the max and min values must be exist.\n\nWhy?  At a dbus level this is not true.  Again this feels like a bug in this IPMI handler.",
      "parentUuid": "73ed0872_be146ad8",
      "revId": "12eded9ea13cc8c7c95ad1a13ee6178cb1ef07d3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4c0cb694_e2f3201c",
        "filename": "healthMonitor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 217,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-05-12T17:44:56Z",
      "side": 1,
      "message": "Agree with patrick, this should be set to quiet_nan if it\u0027s not present.\n\nUnless I\u0027m missing something, this patch does nothing to ensure that the Min and Max properties exist and are populated.  This is changing the Critical Interface.",
      "parentUuid": "27466467_68fd2260",
      "revId": "12eded9ea13cc8c7c95ad1a13ee6178cb1ef07d3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fb77eb88_f43ff2a5",
        "filename": "healthMonitor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 270,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-03-12T13:09:48Z",
      "side": 1,
      "message": "This seems reasonable.",
      "revId": "12eded9ea13cc8c7c95ad1a13ee6178cb1ef07d3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c4ab0a03_293d3ba2",
        "filename": "healthMonitor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 270,
      "author": {
        "id": 1000107
      },
      "writtenOn": "2021-03-15T05:19:50Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "fb77eb88_f43ff2a5",
      "revId": "12eded9ea13cc8c7c95ad1a13ee6178cb1ef07d3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a9af3773_91bf3b8f",
        "filename": "healthMonitor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 530,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-03-12T13:09:48Z",
      "side": 1,
      "message": "What is being solved by moving the manager to root?  At a dbus-level I do not know of any issue with having the object manager in a non-root location.  If there is an issue we should change sdbusplus to always put the object manager at root.",
      "revId": "12eded9ea13cc8c7c95ad1a13ee6178cb1ef07d3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fcf58dd3_5bbffc3a",
        "filename": "healthMonitor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 530,
      "author": {
        "id": 1000107
      },
      "writtenOn": "2021-03-15T01:49:52Z",
      "side": 1,
      "message": "This change is used to compatible with the below sensors map query, it is using \"/\" as the query point:\nhttps://github.com/openbmc/intel-ipmi-oem/blob/master/src/sensorcommands.cpp#L242",
      "parentUuid": "a9af3773_91bf3b8f",
      "revId": "12eded9ea13cc8c7c95ad1a13ee6178cb1ef07d3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1774ed86_d0d9437c",
        "filename": "healthMonitor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 530,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-03-15T03:02:26Z",
      "side": 1,
      "message": "Isn\u0027t that a bug in the IPMI handler then?  It should not assume that the ObjectManager is at root because that is not required by the dbus specification.",
      "parentUuid": "fcf58dd3_5bbffc3a",
      "revId": "12eded9ea13cc8c7c95ad1a13ee6178cb1ef07d3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "01262158_2ae8b217",
        "filename": "healthMonitor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 530,
      "author": {
        "id": 1000107
      },
      "writtenOn": "2021-03-15T05:19:50Z",
      "side": 1,
      "message": "Currently all these other dbus sensors are using the / for the GetManagedObjects. prefer to change this sensor to compatible with others",
      "parentUuid": "1774ed86_d0d9437c",
      "revId": "12eded9ea13cc8c7c95ad1a13ee6178cb1ef07d3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3c8e8290_3fc0fc9c",
        "filename": "healthMonitor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 530,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-03-15T12:58:03Z",
      "side": 1,
      "message": "I do not agree with working around a bug in another piece of code.  The conventions in most standard Linux dbus applications is to put the object manager at the level where dynamic objects exist.\n\nAs an example, org.gnome.DisplayManager only has the ObjectManager object at /org/gnome/DisplayManager/Displays.",
      "parentUuid": "01262158_2ae8b217",
      "revId": "12eded9ea13cc8c7c95ad1a13ee6178cb1ef07d3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8b487587_29f242bc",
        "filename": "healthMonitor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 530,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-03-15T16:14:50Z",
      "side": 1,
      "message": "Also, phosphor-hwmon does not put the ObjectManager at the root, but at /xyz/openbmc_project/sensors.  So this IPMI provider is also broken for that sensor provider.\n\nhttps://github.com/openbmc/phosphor-hwmon/blob/master/readd.cpp#L83",
      "parentUuid": "3c8e8290_3fc0fc9c",
      "revId": "12eded9ea13cc8c7c95ad1a13ee6178cb1ef07d3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6f932f62_a59b191c",
        "filename": "healthMonitor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 530,
      "author": {
        "id": 1000107
      },
      "writtenOn": "2021-03-16T00:53:37Z",
      "side": 1,
      "message": "YES! this phosphor-hwmon is incompatible with the \"sensor list\" too. But it is not used since it is replaced by the hwmontemp in dbus-sensors",
      "parentUuid": "8b487587_29f242bc",
      "revId": "12eded9ea13cc8c7c95ad1a13ee6178cb1ef07d3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ed3618dc_b077f44a",
        "filename": "healthMonitor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 530,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-03-16T04:18:22Z",
      "side": 1,
      "message": "It might not be used on *your* system but lots of systems do indeed use phosphor-hwmon.",
      "parentUuid": "6f932f62_a59b191c",
      "revId": "12eded9ea13cc8c7c95ad1a13ee6178cb1ef07d3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "14c14594_09b26e93",
        "filename": "healthMonitor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 530,
      "author": {
        "id": 1000107
      },
      "writtenOn": "2021-03-16T06:14:12Z",
      "side": 1,
      "message": "I see! Maybe some platforms are not using dbus-sensors too. Let me find a way to fix the compatibility issues. At least no any error for \"sensor list\" command.",
      "parentUuid": "ed3618dc_b077f44a",
      "revId": "12eded9ea13cc8c7c95ad1a13ee6178cb1ef07d3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "15ace630_6eedde81",
        "filename": "healthMonitor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 530,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-03-16T12:29:13Z",
      "side": 1,
      "message": "Looking at that IPMI code again, I’m surprised to see it is making calls to GetManagedObjects /object manager. I don’t know of many other pieces of code doing this.\n\nThe typical alternative in OpenBMC code is to use a mapper query, which should return the same information. It is also quite possible that mapper would be faster because it uses a process which cannot be blocked on hardware (like many of the sensor objects).",
      "parentUuid": "14c14594_09b26e93",
      "revId": "12eded9ea13cc8c7c95ad1a13ee6178cb1ef07d3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c9a9d98a_1c3ccd4a",
        "filename": "healthMonitor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 530,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2021-04-23T02:31:24Z",
      "side": 1,
      "message": "I noticed this as well: the `ipmitool sdr elist` command is broken, by the lack of this linkage. I\u0027m using something based on intel-ipmi-oem, and it requires ObjectManager at root. I didn\u0027t think it could be put anywhere else, because how else would services know how to find it?\n\nI hope this patch makes it in, it solves a lot of compatibility problems with intel-ipmi-oem.",
      "parentUuid": "15ace630_6eedde81",
      "revId": "12eded9ea13cc8c7c95ad1a13ee6178cb1ef07d3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "07ab4c7b_f88f2393",
        "filename": "healthMonitor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 530,
      "author": {
        "id": 1000271
      },
      "writtenOn": "2021-04-26T20:40:16Z",
      "side": 1,
      "message": "Can we fix this ipmi handling in intel-ipmi-oem. I know this may require to change all dbus-sensors. You may avoid if you can look at dynamic path first and if you don\u0027t find then look at root.",
      "parentUuid": "c9a9d98a_1c3ccd4a",
      "revId": "12eded9ea13cc8c7c95ad1a13ee6178cb1ef07d3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}